type CarbonOffset @entity {
  id: ID!
  name: String!
  tokenAddress: String!
  bridge: String!
  registry: String!
  totalBridged: BigDecimal!
  totalRetired: BigDecimal!
  currentSupply: BigDecimal!
  vintage: String!
  projectID: String!
  standard: String!
  methodology: String!
  country: String!
  region: String!
  storageMethod: String!
  method: String!
  emissionType: String!
  category: String!
  isCorsiaCompliant: Boolean
  coBenefits: String!
  correspAdjustment: String!
  additionalCertification: String!
  klimaRanking: BigInt!
  bridges: [Bridge!] @derivedFrom(field: "offset")
  retirements: [Retire!] @derivedFrom(field: "offset")
  lastUpdate: BigInt!
}

type Bridge @entity {
  id: ID!
  timestamp: BigInt!
  transaction: Transaction!
  offset: CarbonOffset!
  value: BigDecimal!
  bridger: String!
}


type Retire @entity {
  id: ID!
  timestamp: BigInt!
  transaction: Transaction!
  offset: CarbonOffset!
  value: BigDecimal!
  beneficiary: String!
  retiree: String!
}

type Transaction @entity {
  id: ID!
  timestamp: BigInt!
  blockNumber: BigInt!
  blockHash: Bytes!
  from: Bytes!
  to: Bytes
  value: BigInt!
  gasUsed: BigInt!
  gasPrice: BigInt!
}
