// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AbacusConnectionManagerSet extends ethereum.Event {
  get params(): AbacusConnectionManagerSet__Params {
    return new AbacusConnectionManagerSet__Params(this);
  }
}

export class AbacusConnectionManagerSet__Params {
  _event: AbacusConnectionManagerSet;

  constructor(event: AbacusConnectionManagerSet) {
    this._event = event;
  }

  get abacusConnectionManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BridgeRequestReceived extends ethereum.Event {
  get params(): BridgeRequestReceived__Params {
    return new BridgeRequestReceived__Params(this);
  }
}

export class BridgeRequestReceived__Params {
  _event: BridgeRequestReceived;

  constructor(event: BridgeRequestReceived) {
    this._event = event;
  }

  get originDomain(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get toDomain(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get bridger(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get requesthash(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class BridgeRequestSent extends ethereum.Event {
  get params(): BridgeRequestSent__Params {
    return new BridgeRequestSent__Params(this);
  }
}

export class BridgeRequestSent__Params {
  _event: BridgeRequestSent;

  constructor(event: BridgeRequestSent) {
    this._event = event;
  }

  get originDomain(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get toDomain(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get bridger(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get nonce(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get requesthash(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class InterchainGasPaymasterSet extends ethereum.Event {
  get params(): InterchainGasPaymasterSet__Params {
    return new InterchainGasPaymasterSet__Params(this);
  }
}

export class InterchainGasPaymasterSet__Params {
  _event: InterchainGasPaymasterSet;

  constructor(event: InterchainGasPaymasterSet) {
    this._event = event;
  }

  get interchainGasPaymaster(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RemoteRouterEnrolled extends ethereum.Event {
  get params(): RemoteRouterEnrolled__Params {
    return new RemoteRouterEnrolled__Params(this);
  }
}

export class RemoteRouterEnrolled__Params {
  _event: RemoteRouterEnrolled;

  constructor(event: RemoteRouterEnrolled) {
    this._event = event;
  }

  get domain(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get router(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class TokenPairAdded extends ethereum.Event {
  get params(): TokenPairAdded__Params {
    return new TokenPairAdded__Params(this);
  }
}

export class TokenPairAdded__Params {
  _event: TokenPairAdded;

  constructor(event: TokenPairAdded) {
    this._event = event;
  }

  get homeTokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get remoteTokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get domainId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ToucanCrossChainMessenger__remoteTokensResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getTokenAddress(): Address {
    return this.value0;
  }

  getTimer(): BigInt {
    return this.value1;
  }
}

export class ToucanCrossChainMessenger__requestsResult {
  value0: boolean;
  value1: BigInt;
  value2: i32;
  value3: i32;

  constructor(value0: boolean, value1: BigInt, value2: i32, value3: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    return map;
  }

  getIsReverted(): boolean {
    return this.value0;
  }

  getTimestamp(): BigInt {
    return this.value1;
  }

  getRequestType(): i32 {
    return this.value2;
  }

  getMessageType(): i32 {
    return this.value3;
  }
}

export class ToucanCrossChainMessenger extends ethereum.SmartContract {
  static bind(address: Address): ToucanCrossChainMessenger {
    return new ToucanCrossChainMessenger("ToucanCrossChainMessenger", address);
  }

  DOMAIN_SEPARATOR(): Bytes {
    let result = super.call(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DOMAIN_SEPARATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  TIMER(): BigInt {
    let result = super.call("TIMER", "TIMER():(uint256)", []);

    return result[0].toBigInt();
  }

  try_TIMER(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("TIMER", "TIMER():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  VERSION(): string {
    let result = super.call("VERSION", "VERSION():(string)", []);

    return result[0].toString();
  }

  try_VERSION(): ethereum.CallResult<string> {
    let result = super.tryCall("VERSION", "VERSION():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  abacusConnectionManager(): Address {
    let result = super.call(
      "abacusConnectionManager",
      "abacusConnectionManager():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_abacusConnectionManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "abacusConnectionManager",
      "abacusConnectionManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  interchainGasPaymaster(): Address {
    let result = super.call(
      "interchainGasPaymaster",
      "interchainGasPaymaster():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_interchainGasPaymaster(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "interchainGasPaymaster",
      "interchainGasPaymaster():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nonce(): BigInt {
    let result = super.call("nonce", "nonce():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nonce(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonce", "nonce():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  remoteTokens(
    param0: Address,
    param1: BigInt
  ): ToucanCrossChainMessenger__remoteTokensResult {
    let result = super.call(
      "remoteTokens",
      "remoteTokens(address,uint32):(address,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new ToucanCrossChainMessenger__remoteTokensResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_remoteTokens(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<ToucanCrossChainMessenger__remoteTokensResult> {
    let result = super.tryCall(
      "remoteTokens",
      "remoteTokens(address,uint32):(address,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ToucanCrossChainMessenger__remoteTokensResult(
        value[0].toAddress(),
        value[1].toBigInt()
      )
    );
  }

  requests(param0: Bytes): ToucanCrossChainMessenger__requestsResult {
    let result = super.call(
      "requests",
      "requests(bytes32):(bool,uint256,uint8,uint8)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new ToucanCrossChainMessenger__requestsResult(
      result[0].toBoolean(),
      result[1].toBigInt(),
      result[2].toI32(),
      result[3].toI32()
    );
  }

  try_requests(
    param0: Bytes
  ): ethereum.CallResult<ToucanCrossChainMessenger__requestsResult> {
    let result = super.tryCall(
      "requests",
      "requests(bytes32):(bool,uint256,uint8,uint8)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ToucanCrossChainMessenger__requestsResult(
        value[0].toBoolean(),
        value[1].toBigInt(),
        value[2].toI32(),
        value[3].toI32()
      )
    );
  }

  routers(param0: BigInt): Bytes {
    let result = super.call("routers", "routers(uint32):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBytes();
  }

  try_routers(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("routers", "routers(uint32):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class AddTokenPairCall extends ethereum.Call {
  get inputs(): AddTokenPairCall__Inputs {
    return new AddTokenPairCall__Inputs(this);
  }

  get outputs(): AddTokenPairCall__Outputs {
    return new AddTokenPairCall__Outputs(this);
  }
}

export class AddTokenPairCall__Inputs {
  _call: AddTokenPairCall;

  constructor(call: AddTokenPairCall) {
    this._call = call;
  }

  get _homeToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _remoteToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _domain(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddTokenPairCall__Outputs {
  _call: AddTokenPairCall;

  constructor(call: AddTokenPairCall) {
    this._call = call;
  }
}

export class EnrollRemoteRouterCall extends ethereum.Call {
  get inputs(): EnrollRemoteRouterCall__Inputs {
    return new EnrollRemoteRouterCall__Inputs(this);
  }

  get outputs(): EnrollRemoteRouterCall__Outputs {
    return new EnrollRemoteRouterCall__Outputs(this);
  }
}

export class EnrollRemoteRouterCall__Inputs {
  _call: EnrollRemoteRouterCall;

  constructor(call: EnrollRemoteRouterCall) {
    this._call = call;
  }

  get _domain(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _router(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class EnrollRemoteRouterCall__Outputs {
  _call: EnrollRemoteRouterCall;

  constructor(call: EnrollRemoteRouterCall) {
    this._call = call;
  }
}

export class HandleCall extends ethereum.Call {
  get inputs(): HandleCall__Inputs {
    return new HandleCall__Inputs(this);
  }

  get outputs(): HandleCall__Outputs {
    return new HandleCall__Outputs(this);
  }
}

export class HandleCall__Inputs {
  _call: HandleCall;

  constructor(call: HandleCall) {
    this._call = call;
  }

  get _origin(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _sender(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _message(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class HandleCall__Outputs {
  _call: HandleCall;

  constructor(call: HandleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _abacusConnectionManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SendMessageCall extends ethereum.Call {
  get inputs(): SendMessageCall__Inputs {
    return new SendMessageCall__Inputs(this);
  }

  get outputs(): SendMessageCall__Outputs {
    return new SendMessageCall__Outputs(this);
  }
}

export class SendMessageCall__Inputs {
  _call: SendMessageCall;

  constructor(call: SendMessageCall) {
    this._call = call;
  }

  get _destinationDomain(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SendMessageCall__Outputs {
  _call: SendMessageCall;

  constructor(call: SendMessageCall) {
    this._call = call;
  }
}

export class SetAbacusConnectionManagerCall extends ethereum.Call {
  get inputs(): SetAbacusConnectionManagerCall__Inputs {
    return new SetAbacusConnectionManagerCall__Inputs(this);
  }

  get outputs(): SetAbacusConnectionManagerCall__Outputs {
    return new SetAbacusConnectionManagerCall__Outputs(this);
  }
}

export class SetAbacusConnectionManagerCall__Inputs {
  _call: SetAbacusConnectionManagerCall;

  constructor(call: SetAbacusConnectionManagerCall) {
    this._call = call;
  }

  get _abacusConnectionManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAbacusConnectionManagerCall__Outputs {
  _call: SetAbacusConnectionManagerCall;

  constructor(call: SetAbacusConnectionManagerCall) {
    this._call = call;
  }
}

export class SetInterchainGasPaymasterCall extends ethereum.Call {
  get inputs(): SetInterchainGasPaymasterCall__Inputs {
    return new SetInterchainGasPaymasterCall__Inputs(this);
  }

  get outputs(): SetInterchainGasPaymasterCall__Outputs {
    return new SetInterchainGasPaymasterCall__Outputs(this);
  }
}

export class SetInterchainGasPaymasterCall__Inputs {
  _call: SetInterchainGasPaymasterCall;

  constructor(call: SetInterchainGasPaymasterCall) {
    this._call = call;
  }

  get _interchainGasPaymaster(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetInterchainGasPaymasterCall__Outputs {
  _call: SetInterchainGasPaymasterCall;

  constructor(call: SetInterchainGasPaymasterCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
