// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddedERC20Banned extends ethereum.Event {
  get params(): AddedERC20Banned__Params {
    return new AddedERC20Banned__Params(this);
  }
}

export class AddedERC20Banned__Params {
  _event: AddedERC20Banned;

  constructor(event: AddedERC20Banned) {
    this._event = event;
  }

  get _address(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AddedProperty extends ethereum.Event {
  get params(): AddedProperty__Params {
    return new AddedProperty__Params(this);
  }
}

export class AddedProperty__Params {
  _event: AddedProperty;

  constructor(event: AddedProperty) {
    this._event = event;
  }

  get propertyType(): string {
    return this._event.parameters[0].value.toString();
  }

  get value(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class AddedThirdPartyERC20WhiteList extends ethereum.Event {
  get params(): AddedThirdPartyERC20WhiteList__Params {
    return new AddedThirdPartyERC20WhiteList__Params(this);
  }
}

export class AddedThirdPartyERC20WhiteList__Params {
  _event: AddedThirdPartyERC20WhiteList;

  constructor(event: AddedThirdPartyERC20WhiteList) {
    this._event = event;
  }

  get _address(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Deposited extends ethereum.Event {
  get params(): Deposited__Params {
    return new Deposited__Params(this);
  }
}

export class Deposited__Params {
  _event: Deposited;

  constructor(event: Deposited) {
    this._event = event;
  }

  get tokenERC2OAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Redeemed extends ethereum.Event {
  get params(): Redeemed__Params {
    return new Redeemed__Params(this);
  }
}

export class Redeemed__Params {
  _event: Redeemed;

  constructor(event: Redeemed) {
    this._event = event;
  }

  get walletAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenERC2OAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RedeemedFee extends ethereum.Event {
  get params(): RedeemedFee__Params {
    return new RedeemedFee__Params(this);
  }
}

export class RedeemedFee__Params {
  _event: RedeemedFee;

  constructor(event: RedeemedFee) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get erc20Contract(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RemovedERC20Banned extends ethereum.Event {
  get params(): RemovedERC20Banned__Params {
    return new RemovedERC20Banned__Params(this);
  }
}

export class RemovedERC20Banned__Params {
  _event: RemovedERC20Banned;

  constructor(event: RemovedERC20Banned) {
    this._event = event;
  }

  get _address(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RemovedProperty extends ethereum.Event {
  get params(): RemovedProperty__Params {
    return new RemovedProperty__Params(this);
  }
}

export class RemovedProperty__Params {
  _event: RemovedProperty;

  constructor(event: RemovedProperty) {
    this._event = event;
  }

  get propertyType(): string {
    return this._event.parameters[0].value.toString();
  }

  get value(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class RemovedThirdPartyERC20WhiteList extends ethereum.Event {
  get params(): RemovedThirdPartyERC20WhiteList__Params {
    return new RemovedThirdPartyERC20WhiteList__Params(this);
  }
}

export class RemovedThirdPartyERC20WhiteList__Params {
  _event: RemovedThirdPartyERC20WhiteList;

  constructor(event: RemovedThirdPartyERC20WhiteList) {
    this._event = event;
  }

  get _address(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UpdatedFeeRedeem extends ethereum.Event {
  get params(): UpdatedFeeRedeem__Params {
    return new UpdatedFeeRedeem__Params(this);
  }
}

export class UpdatedFeeRedeem__Params {
  _event: UpdatedFeeRedeem;

  constructor(event: UpdatedFeeRedeem) {
    this._event = event;
  }

  get vintage(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class UpdatedMinimumVintage extends ethereum.Event {
  get params(): UpdatedMinimumVintage__Params {
    return new UpdatedMinimumVintage__Params(this);
  }
}

export class UpdatedMinimumVintage__Params {
  _event: UpdatedMinimumVintage;

  constructor(event: UpdatedMinimumVintage) {
    this._event = event;
  }

  get vintage(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class UpdatedSelectionProperties extends ethereum.Event {
  get params(): UpdatedSelectionProperties__Params {
    return new UpdatedSelectionProperties__Params(this);
  }
}

export class UpdatedSelectionProperties__Params {
  _event: UpdatedSelectionProperties;

  constructor(event: UpdatedSelectionProperties) {
    this._event = event;
  }

  get propertery(): string {
    return this._event.parameters[0].value.toString();
  }

  get options(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UBO extends ethereum.SmartContract {
  static bind(address: Address): UBO {
    return new UBO("UBO", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  SUPERVISOR_ROLE(): Bytes {
    let result = super.call(
      "SUPERVISOR_ROLE",
      "SUPERVISOR_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_SUPERVISOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "SUPERVISOR_ROLE",
      "SUPERVISOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  allowance(owner: Address, spender: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );

    return result[0].toBigInt();
  }

  try_allowance(owner: Address, spender: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  approve(spender: Address, amount: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_approve(spender: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(account: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  decreaseAllowance(spender: Address, subtractedValue: BigInt): boolean {
    let result = super.call(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_decreaseAllowance(
    spender: Address,
    subtractedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  erc20TokensBalances(param0: Address): BigInt {
    let result = super.call(
      "erc20TokensBalances",
      "erc20TokensBalances(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_erc20TokensBalances(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "erc20TokensBalances",
      "erc20TokensBalances(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feeRedeem(): BigInt {
    let result = super.call("feeRedeem", "feeRedeem():(uint256)", []);

    return result[0].toBigInt();
  }

  try_feeRedeem(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("feeRedeem", "feeRedeem():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feeRedeemAddress(): Address {
    let result = super.call(
      "feeRedeemAddress",
      "feeRedeemAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_feeRedeemAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "feeRedeemAddress",
      "feeRedeemAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getERC20Banned(): Array<Address> {
    let result = super.call(
      "getERC20Banned",
      "getERC20Banned():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getERC20Banned(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getERC20Banned",
      "getERC20Banned():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getERC20ThirdPartyWhiteList(): Array<Address> {
    let result = super.call(
      "getERC20ThirdPartyWhiteList",
      "getERC20ThirdPartyWhiteList():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getERC20ThirdPartyWhiteList(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getERC20ThirdPartyWhiteList",
      "getERC20ThirdPartyWhiteList():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getERC20Tokens(): Array<Address> {
    let result = super.call(
      "getERC20Tokens",
      "getERC20Tokens():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getERC20Tokens(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getERC20Tokens",
      "getERC20Tokens():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getFreeRedeemAddresses(): Array<Address> {
    let result = super.call(
      "getFreeRedeemAddresses",
      "getFreeRedeemAddresses():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getFreeRedeemAddresses(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getFreeRedeemAddresses",
      "getFreeRedeemAddresses():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getProperty(property: string): Array<string> {
    let result = super.call("getProperty", "getProperty(string):(string[])", [
      ethereum.Value.fromString(property)
    ]);

    return result[0].toStringArray();
  }

  try_getProperty(property: string): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "getProperty",
      "getProperty(string):(string[])",
      [ethereum.Value.fromString(property)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  increaseAllowance(spender: Address, addedValue: BigInt): boolean {
    let result = super.call(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_increaseAllowance(
    spender: Address,
    addedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isERC20Suitable(_address: Address): boolean {
    let result = super.call(
      "isERC20Suitable",
      "isERC20Suitable(address):(bool)",
      [ethereum.Value.fromAddress(_address)]
    );

    return result[0].toBoolean();
  }

  try_isERC20Suitable(_address: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isERC20Suitable",
      "isERC20Suitable(address):(bool)",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isSupervisor(): boolean {
    let result = super.call("isSupervisor", "isSupervisor():(bool)", []);

    return result[0].toBoolean();
  }

  try_isSupervisor(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isSupervisor", "isSupervisor():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  minimumVintageYear(): BigInt {
    let result = super.call(
      "minimumVintageYear",
      "minimumVintageYear():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_minimumVintageYear(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minimumVintageYear",
      "minimumVintageYear():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  optionsSelectionCountries(): i32 {
    let result = super.call(
      "optionsSelectionCountries",
      "optionsSelectionCountries():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_optionsSelectionCountries(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "optionsSelectionCountries",
      "optionsSelectionCountries():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  optionsSelectionMethodologies(): i32 {
    let result = super.call(
      "optionsSelectionMethodologies",
      "optionsSelectionMethodologies():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_optionsSelectionMethodologies(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "optionsSelectionMethodologies",
      "optionsSelectionMethodologies():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  optionsSelectionProjectId(): i32 {
    let result = super.call(
      "optionsSelectionProjectId",
      "optionsSelectionProjectId():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_optionsSelectionProjectId(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "optionsSelectionProjectId",
      "optionsSelectionProjectId():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  optionsSelectionRegions(): i32 {
    let result = super.call(
      "optionsSelectionRegions",
      "optionsSelectionRegions():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_optionsSelectionRegions(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "optionsSelectionRegions",
      "optionsSelectionRegions():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  optionsSelectionRegistry(): i32 {
    let result = super.call(
      "optionsSelectionRegistry",
      "optionsSelectionRegistry():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_optionsSelectionRegistry(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "optionsSelectionRegistry",
      "optionsSelectionRegistry():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  optionsSelectionType(): i32 {
    let result = super.call(
      "optionsSelectionType",
      "optionsSelectionType():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_optionsSelectionType(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "optionsSelectionType",
      "optionsSelectionType():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  orchestratorAddress(): Address {
    let result = super.call(
      "orchestratorAddress",
      "orchestratorAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_orchestratorAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "orchestratorAddress",
      "orchestratorAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(recipient: Address, amount: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_transfer(
    recipient: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(sender: Address, recipient: Address, amount: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    sender: Address,
    recipient: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ChangeERC20BannedCall extends ethereum.Call {
  get inputs(): ChangeERC20BannedCall__Inputs {
    return new ChangeERC20BannedCall__Inputs(this);
  }

  get outputs(): ChangeERC20BannedCall__Outputs {
    return new ChangeERC20BannedCall__Outputs(this);
  }
}

export class ChangeERC20BannedCall__Inputs {
  _call: ChangeERC20BannedCall;

  constructor(call: ChangeERC20BannedCall) {
    this._call = call;
  }

  get _addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get remove(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class ChangeERC20BannedCall__Outputs {
  _call: ChangeERC20BannedCall;

  constructor(call: ChangeERC20BannedCall) {
    this._call = call;
  }
}

export class ChangePropertyCall extends ethereum.Call {
  get inputs(): ChangePropertyCall__Inputs {
    return new ChangePropertyCall__Inputs(this);
  }

  get outputs(): ChangePropertyCall__Outputs {
    return new ChangePropertyCall__Outputs(this);
  }
}

export class ChangePropertyCall__Inputs {
  _call: ChangePropertyCall;

  constructor(call: ChangePropertyCall) {
    this._call = call;
  }

  get property(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _inputs(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }

  get remove(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class ChangePropertyCall__Outputs {
  _call: ChangePropertyCall;

  constructor(call: ChangePropertyCall) {
    this._call = call;
  }
}

export class ChangeThirdPartyWhiteListCall extends ethereum.Call {
  get inputs(): ChangeThirdPartyWhiteListCall__Inputs {
    return new ChangeThirdPartyWhiteListCall__Inputs(this);
  }

  get outputs(): ChangeThirdPartyWhiteListCall__Outputs {
    return new ChangeThirdPartyWhiteListCall__Outputs(this);
  }
}

export class ChangeThirdPartyWhiteListCall__Inputs {
  _call: ChangeThirdPartyWhiteListCall;

  constructor(call: ChangeThirdPartyWhiteListCall) {
    this._call = call;
  }

  get _addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get remove(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class ChangeThirdPartyWhiteListCall__Outputs {
  _call: ChangeThirdPartyWhiteListCall;

  constructor(call: ChangeThirdPartyWhiteListCall) {
    this._call = call;
  }
}

export class DecreaseAllowanceCall extends ethereum.Call {
  get inputs(): DecreaseAllowanceCall__Inputs {
    return new DecreaseAllowanceCall__Inputs(this);
  }

  get outputs(): DecreaseAllowanceCall__Outputs {
    return new DecreaseAllowanceCall__Outputs(this);
  }
}

export class DecreaseAllowanceCall__Inputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get subtractedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseAllowanceCall__Outputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _erc20(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class FreeRedeemCall extends ethereum.Call {
  get inputs(): FreeRedeemCall__Inputs {
    return new FreeRedeemCall__Inputs(this);
  }

  get outputs(): FreeRedeemCall__Outputs {
    return new FreeRedeemCall__Outputs(this);
  }
}

export class FreeRedeemCall__Inputs {
  _call: FreeRedeemCall;

  constructor(call: FreeRedeemCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FreeRedeemCall__Outputs {
  _call: FreeRedeemCall;

  constructor(call: FreeRedeemCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class IncreaseAllowanceCall extends ethereum.Call {
  get inputs(): IncreaseAllowanceCall__Inputs {
    return new IncreaseAllowanceCall__Inputs(this);
  }

  get outputs(): IncreaseAllowanceCall__Outputs {
    return new IncreaseAllowanceCall__Outputs(this);
  }
}

export class IncreaseAllowanceCall__Inputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get addedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseAllowanceCall__Outputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _orchestratorAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class ManageFreeRedeemAddressesCall extends ethereum.Call {
  get inputs(): ManageFreeRedeemAddressesCall__Inputs {
    return new ManageFreeRedeemAddressesCall__Inputs(this);
  }

  get outputs(): ManageFreeRedeemAddressesCall__Outputs {
    return new ManageFreeRedeemAddressesCall__Outputs(this);
  }
}

export class ManageFreeRedeemAddressesCall__Inputs {
  _call: ManageFreeRedeemAddressesCall;

  constructor(call: ManageFreeRedeemAddressesCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get remove(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class ManageFreeRedeemAddressesCall__Outputs {
  _call: ManageFreeRedeemAddressesCall;

  constructor(call: ManageFreeRedeemAddressesCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetFeeRedeemCall extends ethereum.Call {
  get inputs(): SetFeeRedeemCall__Inputs {
    return new SetFeeRedeemCall__Inputs(this);
  }

  get outputs(): SetFeeRedeemCall__Outputs {
    return new SetFeeRedeemCall__Outputs(this);
  }
}

export class SetFeeRedeemCall__Inputs {
  _call: SetFeeRedeemCall;

  constructor(call: SetFeeRedeemCall) {
    this._call = call;
  }

  get _redeem(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFeeRedeemCall__Outputs {
  _call: SetFeeRedeemCall;

  constructor(call: SetFeeRedeemCall) {
    this._call = call;
  }
}

export class SetFreeRedeemAddressesCall extends ethereum.Call {
  get inputs(): SetFreeRedeemAddressesCall__Inputs {
    return new SetFreeRedeemAddressesCall__Inputs(this);
  }

  get outputs(): SetFreeRedeemAddressesCall__Outputs {
    return new SetFreeRedeemAddressesCall__Outputs(this);
  }
}

export class SetFreeRedeemAddressesCall__Inputs {
  _call: SetFreeRedeemAddressesCall;

  constructor(call: SetFreeRedeemAddressesCall) {
    this._call = call;
  }

  get addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class SetFreeRedeemAddressesCall__Outputs {
  _call: SetFreeRedeemAddressesCall;

  constructor(call: SetFreeRedeemAddressesCall) {
    this._call = call;
  }
}

export class SetMinimumVintageYearCall extends ethereum.Call {
  get inputs(): SetMinimumVintageYearCall__Inputs {
    return new SetMinimumVintageYearCall__Inputs(this);
  }

  get outputs(): SetMinimumVintageYearCall__Outputs {
    return new SetMinimumVintageYearCall__Outputs(this);
  }
}

export class SetMinimumVintageYearCall__Inputs {
  _call: SetMinimumVintageYearCall;

  constructor(call: SetMinimumVintageYearCall) {
    this._call = call;
  }

  get _minimumVintageYear(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinimumVintageYearCall__Outputs {
  _call: SetMinimumVintageYearCall;

  constructor(call: SetMinimumVintageYearCall) {
    this._call = call;
  }
}

export class SetOptionsSelectionCall extends ethereum.Call {
  get inputs(): SetOptionsSelectionCall__Inputs {
    return new SetOptionsSelectionCall__Inputs(this);
  }

  get outputs(): SetOptionsSelectionCall__Outputs {
    return new SetOptionsSelectionCall__Outputs(this);
  }
}

export class SetOptionsSelectionCall__Inputs {
  _call: SetOptionsSelectionCall;

  constructor(call: SetOptionsSelectionCall) {
    this._call = call;
  }

  get property(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _optionsSelect(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetOptionsSelectionCall__Outputs {
  _call: SetOptionsSelectionCall;

  constructor(call: SetOptionsSelectionCall) {
    this._call = call;
  }
}

export class SetRedeemAddressCall extends ethereum.Call {
  get inputs(): SetRedeemAddressCall__Inputs {
    return new SetRedeemAddressCall__Inputs(this);
  }

  get outputs(): SetRedeemAddressCall__Outputs {
    return new SetRedeemAddressCall__Outputs(this);
  }
}

export class SetRedeemAddressCall__Inputs {
  _call: SetRedeemAddressCall;

  constructor(call: SetRedeemAddressCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRedeemAddressCall__Outputs {
  _call: SetRedeemAddressCall;

  constructor(call: SetRedeemAddressCall) {
    this._call = call;
  }
}

export class TaxedRedeemCall extends ethereum.Call {
  get inputs(): TaxedRedeemCall__Inputs {
    return new TaxedRedeemCall__Inputs(this);
  }

  get outputs(): TaxedRedeemCall__Outputs {
    return new TaxedRedeemCall__Outputs(this);
  }
}

export class TaxedRedeemCall__Inputs {
  _call: TaxedRedeemCall;

  constructor(call: TaxedRedeemCall) {
    this._call = call;
  }

  get erc20Addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get amount(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class TaxedRedeemCall__Outputs {
  _call: TaxedRedeemCall;

  constructor(call: TaxedRedeemCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
